{"version":3,"file":"static/js/408.f6ad71e0.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","helpers/normalizeMovies.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","pages/NotFound/NotFound.jsx","services/movie-api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { FiArrowLeft } from 'react-icons/fi';\n\nexport const ArrowIcon = styled(FiArrowLeft)`\n  margin-right: 12px;\n  width: 24px;\n  height: 16px;\n`;\n\nexport const ArrowBackWrapper = styled.div`\n  margin-bottom: 16px;\n  font-size: 20px;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  gap: 24px;\n\n  font-size: 18px;\n`;\n\nexport const AdditionalInfoLink = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-top: 12px;\n  font-size: 18px;\n  font-weight: bold;\n\n  color: orangered;\n  text-decoration: underline;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  li {\n    align-items: start;\n    display: flex;\n    gap: 12px;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n  }\n`;\n","export function normalizeMovies(movies) {\n  return movies.map(\n    ({ id, poster_path, title, tagline, vote_average, overview }) => ({\n      id,\n      title,\n      tagline,\n      poster_path,\n      overview,\n      vote_average: vote_average.toFixed(1),\n    })\n  );\n}\n\nexport function normalizeSingleMovie({\n  id,\n  poster_path,\n  title,\n  tagline,\n  vote_average,\n  overview,\n  genres,\n}) {\n  return {\n    id,\n    title,\n    tagline,\n    poster_path,\n    overview,\n    vote_average: vote_average.toFixed(1),\n    genres: genres.map(({ name }) => name),\n  };\n}\n","import { Suspense, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport Spinner from 'components/Spinner/Spinner';\nimport {\n  ArrowIcon,\n  ArrowBackWrapper,\n  MovieContainer,\n  AdditionalInfoLink,\n} from 'components/MovieCard/MovieCard.styled';\n\nexport default function MovieCard({ movie }) {\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  const { poster_path, title, tagline, vote_average, overview, genres } = movie;\n\n  return (\n    <div>\n      <ArrowBackWrapper>\n        <Link to={backLinkRef.current}>\n          <ArrowIcon />\n          Go back\n        </Link>\n      </ArrowBackWrapper>\n      <MovieContainer>\n        <img\n          src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n          alt={`${title}`}\n        />\n        <div>\n          <h2>{title}</h2>\n          <p>{vote_average}</p>\n          <ul>{genres && genres.map(genre => <li key={genre}>{genre}</li>)}</ul>\n          <p>{tagline}</p>\n          <p>{overview}</p>\n        </div>\n      </MovieContainer>\n      <AdditionalInfoLink>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </AdditionalInfoLink>\n      <Suspense fallback={<Spinner />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.string,\n    tagline: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as movieAPI from 'services/movie-api';\nimport { normalizeSingleMovie } from 'helpers/normalizeMovies';\nimport NotFound from 'pages/NotFound/NotFound';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nexport default function MovieDetails() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await movieAPI.getMovieDetails(id);\n\n        const normalizedMovie = normalizeSingleMovie(response.data);\n        setMovie(normalizedMovie);\n      } catch (error) {\n        console.log(error);\n        setError(true);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  return <main>{error ? <NotFound /> : <MovieCard movie={movie} />}</main>;\n}\n","import { Link } from 'react-router-dom';\n\nexport default function NotFound() {\n  return (\n    <>\n      <Link to=\"/\">Go back</Link>\n      <div>Not Found</div>\n    </>\n  );\n}\n","import axios from 'axios';\nexport let controller = new AbortController();\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MDllNDQ3NzZkODk4M2I4MjUxZGIyM2UwYTBkMDc2NCIsInN1YiI6IjY0OTk0ZWIxNmY0M2VjMDEzOTliMDJmMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zfMWjVI_xe7Qrg38kb3t2TBDdyF9nQKUMfvJwYSbESc';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  language: 'en-US',\n  sort_by: 'popularity.desc',\n  include_adult: false,\n};\n\nfunction getTrendingMovies() {\n  return axios.get('trending/movie/day', {\n    signal: controller.signal,\n  });\n}\n\nfunction searchMovies(query, page = 1) {\n  return axios.get(`search/movie?query=${query}&page=${page}`);\n}\n\nfunction getMovieDetails(movieId) {\n  return axios.get(`movie/${movieId}`);\n}\n\nfunction getMovieCredits(movieId) {\n  return axios.get(`movie/${movieId}/credits`);\n}\n\nfunction getMovieReviews(movieId) {\n  return axios.get(`movie/${movieId}/reviews`);\n}\n\nexport {\n  getTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["ArrowIcon","styled","FiArrowLeft","ArrowBackWrapper","MovieContainer","AdditionalInfoLink","AdditionalInfoList","normalizeMovies","movies","map","id","poster_path","title","tagline","vote_average","overview","toFixed","normalizeSingleMovie","genres","name","MovieCard","movie","location","useLocation","backLinkRef","useRef","state","from","to","current","src","alt","genre","Suspense","fallback","Spinner","MovieDetails","useParams","useState","setMovie","error","setError","useEffect","fetchMovieDetails","movieAPI","response","normalizedMovie","data","console","log","NotFound","controller","AbortController","getTrendingMovies","axios","signal","searchMovies","query","page","getMovieDetails","movieId","getMovieCredits","getMovieReviews","language","sort_by","include_adult"],"sourceRoot":""}