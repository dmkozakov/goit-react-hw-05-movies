{"version":3,"file":"static/js/768.30b72091.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.tsx","components/MovieList/MovieList.tsx","helpers/normalizeMovies.ts","components/Searchbar/Searchbar.tsx","pages/Movies/Movies.tsx","pages/NotFound/NotFound.tsx","services/movie-api.ts"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const MovieListLink = styled(Link)`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const Img = styled.img`\n  width: 185px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieListStyled,\n  MovieListLink,\n  Img,\n  MovieInfo,\n} from './MovieList.styled';\nimport { IMovie } from 'interfaces/IMovie';\n\ninterface Props {\n  movies: IMovie[];\n}\n\nexport default function MovieList({ movies }: Props) {\n  const location = useLocation();\n\n  return (\n    <MovieListStyled>\n      {movies.map(({ id, title, poster_path, vote_average, overview }) => (\n        <li key={id}>\n          <MovieListLink to={`/movies/${id}`} state={{ from: location }}>\n            <Img\n              src={`https://image.tmdb.org/t/p/w154${poster_path}`}\n              alt={`${title}`}\n            />\n            <MovieInfo>\n              <h3>{title}</h3>\n              <p>{overview}</p>\n              <p>{vote_average}</p>\n            </MovieInfo>\n          </MovieListLink>\n        </li>\n      ))}\n    </MovieListStyled>\n  );\n}\n","import { IMovie } from 'interfaces/IMovie';\n\nexport function normalizeMovies(movies: IMovie[]) {\n  return movies.map(\n    ({ id, poster_path, title, tagline, vote_average, overview }) => {\n      if (typeof vote_average === 'number') {\n        return {\n          id,\n          title,\n          tagline,\n          poster_path,\n          overview,\n          vote_average: vote_average.toFixed(1),\n        };\n      }\n      return {\n        id,\n        title,\n        tagline,\n        poster_path,\n        overview,\n        vote_average,\n      };\n    }\n  );\n}\n\nexport function normalizeSingleMovie({\n  id,\n  poster_path,\n  title,\n  tagline,\n  vote_average,\n  overview,\n  genres = [],\n}: IMovie) {\n  if (typeof vote_average === 'number') {\n    return {\n      id,\n      title,\n      tagline,\n      poster_path,\n      overview,\n      vote_average: vote_average.toFixed(1),\n      genres: genres.map(el => {\n        if (typeof el !== 'string') {\n          return el.name;\n        }\n        return el;\n      }),\n    };\n  }\n}\n","import { FormEvent } from 'react';\n\ninterface Props {\n  onSubmit: (e: FormEvent) => void;\n}\n\nexport default function Searchbar({ onSubmit }: Props) {\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" name=\"search\" onChange={e => e.target.value} />\n      <button type=\"submit\">search</button>\n    </form>\n  );\n}\n","import MovieList from 'components/MovieList/MovieList';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { normalizeMovies } from 'helpers/normalizeMovies';\nimport { IMovie } from 'interfaces/IMovie';\nimport NotFound from 'pages/NotFound/NotFound';\nimport { FormEvent, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/movie-api';\n\ninterface FormElements extends HTMLFormControlsCollection {\n  search: HTMLInputElement;\n}\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState<IMovie[]>([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n\n    const fetchMoviesByName = async () => {\n      try {\n        const response = await searchMovies(movieName);\n\n        const normalizedMovies = normalizeMovies(response.data.results);\n\n        setMovies(normalizedMovies);\n      } catch (error) {\n        console.log(error);\n        setError(true);\n      }\n    };\n\n    fetchMoviesByName();\n  }, [movieName]);\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n\n    if (!(form.elements as FormElements).search.value) {\n      return alert('Enter a query');\n    }\n\n    setSearchParams({\n      query: (form.elements as FormElements).search.value.trim(),\n    });\n\n    form.reset();\n  };\n\n  return (\n    <main>\n      <Searchbar onSubmit={handleSubmit} />\n      {error && <NotFound />}\n      {!error && movieName && <MovieList movies={movies} />}\n      {movieName && movies.length === 0 && <NotFound />}\n    </main>\n  );\n}\n","import { Link } from 'react-router-dom';\n\nexport default function NotFound() {\n  return (\n    <>\n      <Link to=\"/\">Go back</Link>\n      <div>Not Found</div>\n    </>\n  );\n}\n","import { IMovie } from 'interfaces/IMovie';\nimport axios from 'axios';\nimport { IReview } from 'interfaces/IReviews';\nimport { ICast } from 'interfaces/ICast';\nexport let controller = new AbortController();\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MDllNDQ3NzZkODk4M2I4MjUxZGIyM2UwYTBkMDc2NCIsInN1YiI6IjY0OTk0ZWIxNmY0M2VjMDEzOTliMDJmMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zfMWjVI_xe7Qrg38kb3t2TBDdyF9nQKUMfvJwYSbESc';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  language: 'en-US',\n  sort_by: 'popularity.desc',\n  include_adult: false,\n};\n\ninterface Movies {\n  data: { results: IMovie[] };\n}\n\ninterface SingleMovie {\n  data: IMovie;\n}\n\ninterface SingleReview {\n  data: {\n    results: IReview[];\n  };\n}\n\ninterface SingleCast {\n  data: {\n    cast: ICast[];\n  };\n}\n\nfunction getTrendingMovies(): Promise<Movies> {\n  return axios.get('trending/movie/day', {\n    signal: controller.signal,\n  });\n}\n\nfunction searchMovies(query: string, page = 1): Promise<Movies> {\n  return axios.get(`search/movie?query=${query}&page=${page}`);\n}\n\nfunction getMovieDetails(movieId: string): Promise<SingleMovie> {\n  return axios.get(`movie/${movieId}`);\n}\n\nfunction getMovieCredits(movieId: string): Promise<SingleCast> {\n  return axios.get(`movie/${movieId}/credits`);\n}\n\nfunction getMovieReviews(movieId: string): Promise<SingleReview> {\n  return axios.get(`movie/${movieId}/reviews`);\n}\n\nexport {\n  getTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["MovieListStyled","styled","MovieListLink","Link","Img","MovieInfo","MovieList","movies","location","useLocation","map","id","title","poster_path","vote_average","overview","to","state","from","src","alt","normalizeMovies","tagline","toFixed","normalizeSingleMovie","genres","el","name","Searchbar","onSubmit","type","onChange","e","target","value","Movies","useSearchParams","searchParams","setSearchParams","movieName","get","useState","setMovies","error","setError","useEffect","fetchMoviesByName","searchMovies","response","normalizedMovies","data","results","console","log","preventDefault","form","elements","search","alert","query","trim","reset","NotFound","length","controller","AbortController","getTrendingMovies","axios","signal","page","getMovieDetails","movieId","getMovieCredits","getMovieReviews","language","sort_by","include_adult"],"sourceRoot":""}