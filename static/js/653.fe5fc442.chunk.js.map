{"version":3,"file":"static/js/653.fe5fc442.chunk.js","mappings":"4PAMO,SAASA,EAAcC,GAC5B,OAAOA,EAAKC,MAAM,EAAG,IAAIC,KAAI,kBAAwC,CACnEC,aAD2B,EAAGA,aAE9BC,KAF2B,EAAiBA,KAG5CC,UAH2B,EAAuBA,UAAvB,GAK9B,C,aCNc,SAASC,EAAT,GAAoC,IAAhBN,EAAe,EAAfA,KACzBG,EAAkCH,EAAlCG,aAAcC,EAAoBJ,EAApBI,KAAMC,EAAcL,EAAdK,UAE5B,OACE,2BACE,gBAAKE,IAAG,wCAAmCJ,GAAgBK,IAAKJ,KAChE,4BACE,wBAAKA,KACL,uBAAIC,SAIX,C,cCVc,SAASI,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAwBE,EAAAA,EAAAA,UAAkB,IAA1C,eAAOZ,EAAP,KAAaa,EAAb,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,mGAEfL,EAFe,gCAGMM,EAAAA,GAAyBN,GAH/B,OAGXO,EAHW,OAIXjB,EAAOD,EAAckB,EAASC,KAAKlB,MAEzCa,EAAQb,GANS,uDASnBmB,QAAQC,IAAR,MATmB,yDAAH,qDAapBL,GACD,GAAE,CAACL,KAGF,SAAC,KAAD,UACGV,EAAKE,KAAI,SAAAF,GAAI,OACZ,SAACM,EAAD,CAAUN,KAAMA,GAAWA,EAAKK,UADpB,KAKnB,C,mMClCYgB,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,IAAPD,CAAH,gFAMTE,EAAmBF,EAAAA,EAAAA,IAAH,+GAShBG,EAAiBH,EAAAA,EAAAA,IAAH,8EAOdI,EAAqBJ,EAAAA,EAAAA,IAAH,6KAWlBK,EAAqBL,EAAAA,EAAAA,GAAH,+O,qKChCpBM,EAAa,IAAIC,gBAiC5B,SAASC,IACP,OAAOC,EAAAA,EAAAA,IAAU,qBAAsB,CACrCC,OAAQJ,EAAWI,QAEtB,CAED,SAASC,EAAaC,GAA2C,IAA5BC,EAA2B,uDAApB,EAC1C,OAAOJ,EAAAA,EAAAA,IAAA,6BAAgCG,EAAhC,iBAA8CC,GACtD,CAED,SAASC,EAAgBC,GACvB,OAAON,EAAAA,EAAAA,IAAA,gBAAmBM,GAC3B,CAED,SAASC,EAAgBD,GACvB,OAAON,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,YACR,CAED,SAASE,EAAgBF,GACvB,OAAON,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,YACR,CAhDDN,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAHE,6NAIFA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBS,SAAU,QACVC,QAAS,kBACTC,eAAe,E","sources":["helpers/normalizeCast.ts","components/CastItem/CastItem.tsx","components/Cast/Cast.tsx","components/MovieCard/MovieCard.styled.tsx","services/movie-api.ts"],"sourcesContent":["interface Cast {\n  profile_path: string;\n  name: string;\n  character: string;\n}\n\nexport function normalizeCast(cast: Cast[]) {\n  return cast.slice(0, 10).map(({ profile_path, name, character }) => ({\n    profile_path,\n    name,\n    character,\n  }));\n}\n","import { ICast } from 'interfaces/ICast';\n\ninterface Props {\n  cast: ICast;\n}\n\nexport default function CastItem({ cast }: Props) {\n  const { profile_path, name, character } = cast;\n\n  return (\n    <li>\n      <img src={`https://image.tmdb.org/t/p/w45${profile_path}`} alt={name} />\n      <div>\n        <h4>{name}</h4>\n        <p>{character}</p>\n      </div>\n    </li>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as movieAPI from 'services/movie-api';\nimport { normalizeCast } from 'helpers/normalizeCast';\nimport CastItem from 'components/CastItem/CastItem';\nimport { AdditionalInfoList } from 'components/MovieCard/MovieCard.styled';\nimport { ICast } from 'interfaces/ICast';\n\nexport default function Cast() {\n  const { id } = useParams();\n\n  const [cast, setCast] = useState<ICast[]>([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        if (id) {\n          const response = await movieAPI.getMovieCredits(id);\n          const cast = normalizeCast(response.data.cast);\n\n          setCast(cast);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [id]);\n\n  return (\n    <AdditionalInfoList>\n      {cast.map(cast => (\n        <CastItem cast={cast} key={cast.character} />\n      ))}\n    </AdditionalInfoList>\n  );\n}\n","import styled from '@emotion/styled';\nimport { FiArrowLeft } from 'react-icons/fi';\n\nexport const ArrowIcon = styled(FiArrowLeft)`\n  margin-right: 12px;\n  width: 24px;\n  height: 16px;\n`;\n\nexport const ArrowBackWrapper = styled.div`\n  margin-bottom: 16px;\n  font-size: 20px;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  gap: 24px;\n\n  font-size: 18px;\n`;\n\nexport const AdditionalInfoLink = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-top: 12px;\n  font-size: 18px;\n  font-weight: bold;\n\n  color: orangered;\n  text-decoration: underline;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  li {\n    align-items: start;\n    display: flex;\n    gap: 12px;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n  }\n`;\n","import { IMovie } from 'interfaces/IMovie';\nimport axios from 'axios';\nimport { IReview } from 'interfaces/IReviews';\nimport { ICast } from 'interfaces/ICast';\nexport let controller = new AbortController();\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MDllNDQ3NzZkODk4M2I4MjUxZGIyM2UwYTBkMDc2NCIsInN1YiI6IjY0OTk0ZWIxNmY0M2VjMDEzOTliMDJmMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zfMWjVI_xe7Qrg38kb3t2TBDdyF9nQKUMfvJwYSbESc';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  language: 'en-US',\n  sort_by: 'popularity.desc',\n  include_adult: false,\n};\n\ninterface Movies {\n  data: { results: IMovie[] };\n}\n\ninterface SingleMovie {\n  data: IMovie;\n}\n\ninterface SingleReview {\n  data: {\n    results: IReview[];\n  };\n}\n\ninterface SingleCast {\n  data: {\n    cast: ICast[];\n  };\n}\n\nfunction getTrendingMovies(): Promise<Movies> {\n  return axios.get('trending/movie/day', {\n    signal: controller.signal,\n  });\n}\n\nfunction searchMovies(query: string, page = 1): Promise<Movies> {\n  return axios.get(`search/movie?query=${query}&page=${page}`);\n}\n\nfunction getMovieDetails(movieId: string): Promise<SingleMovie> {\n  return axios.get(`movie/${movieId}`);\n}\n\nfunction getMovieCredits(movieId: string): Promise<SingleCast> {\n  return axios.get(`movie/${movieId}/credits`);\n}\n\nfunction getMovieReviews(movieId: string): Promise<SingleReview> {\n  return axios.get(`movie/${movieId}/reviews`);\n}\n\nexport {\n  getTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["normalizeCast","cast","slice","map","profile_path","name","character","CastItem","src","alt","Cast","id","useParams","useState","setCast","useEffect","fetchMovieCast","movieAPI","response","data","console","log","ArrowIcon","styled","FiArrowLeft","ArrowBackWrapper","MovieContainer","AdditionalInfoLink","AdditionalInfoList","controller","AbortController","getTrendingMovies","axios","signal","searchMovies","query","page","getMovieDetails","movieId","getMovieCredits","getMovieReviews","language","sort_by","include_adult"],"sourceRoot":""}