{"version":3,"file":"static/js/835.74887d37.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.tsx","helpers/normalizeMovies.ts","components/MovieCard/MovieCard.tsx","pages/MovieDetails/MovieDetails.tsx","pages/NotFound/NotFound.tsx","services/movie-api.ts"],"sourcesContent":["import styled from '@emotion/styled';\nimport { FiArrowLeft } from 'react-icons/fi';\n\nexport const ArrowIcon = styled(FiArrowLeft)`\n  margin-right: 12px;\n  width: 24px;\n  height: 16px;\n`;\n\nexport const ArrowBackWrapper = styled.div`\n  margin-bottom: 16px;\n  font-size: 20px;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  gap: 24px;\n\n  font-size: 18px;\n`;\n\nexport const AdditionalInfoLink = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-top: 12px;\n  font-size: 18px;\n  font-weight: bold;\n\n  color: orangered;\n  text-decoration: underline;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  li {\n    align-items: start;\n    display: flex;\n    gap: 12px;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n  }\n`;\n","import { IMovie } from 'interfaces/IMovie';\n\nexport function normalizeMovies(movies: IMovie[]) {\n  return movies.map(\n    ({ id, poster_path, title, tagline, vote_average, overview }) => {\n      if (typeof vote_average === 'number') {\n        return {\n          id,\n          title,\n          tagline,\n          poster_path,\n          overview,\n          vote_average: vote_average.toFixed(1),\n        };\n      }\n      return {\n        id,\n        title,\n        tagline,\n        poster_path,\n        overview,\n        vote_average,\n      };\n    }\n  );\n}\n\nexport function normalizeSingleMovie({\n  id,\n  poster_path,\n  title,\n  tagline,\n  vote_average,\n  overview,\n  genres = [],\n}: IMovie) {\n  if (typeof vote_average === 'number') {\n    return {\n      id,\n      title,\n      tagline,\n      poster_path,\n      overview,\n      vote_average: vote_average.toFixed(1),\n      genres: genres.map(el => {\n        if (typeof el !== 'string') {\n          return el.name;\n        }\n        return el;\n      }),\n    };\n  }\n}\n","import { Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport Spinner from 'components/Spinner/Spinner';\nimport {\n  ArrowIcon,\n  ArrowBackWrapper,\n  MovieContainer,\n  AdditionalInfoLink,\n} from 'components/MovieCard/MovieCard.styled';\nimport { IMovie } from 'interfaces/IMovie';\n\ninterface Props {\n  movie: IMovie;\n}\n\nexport default function MovieCard({ movie }: Props) {\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  const { poster_path, title, tagline, vote_average, overview, genres } = movie;\n\n  return (\n    <div>\n      <ArrowBackWrapper>\n        <Link to={backLinkRef.current}>\n          <ArrowIcon />\n          Go back\n        </Link>\n      </ArrowBackWrapper>\n      <MovieContainer>\n        <img\n          src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n          alt={`${title}`}\n        />\n        <div>\n          <h2>{title}</h2>\n          <p>{vote_average}</p>\n          <ul>\n            {genres &&\n              genres.map(genre => {\n                if (typeof genre !== 'string') {\n                  return <li key={genre.name}>{genre}</li>;\n                }\n                return <li key={genre}>{genre}</li>;\n              })}\n          </ul>\n          <p>{tagline}</p>\n          <p>{overview}</p>\n        </div>\n      </MovieContainer>\n      <AdditionalInfoLink>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </AdditionalInfoLink>\n      <Suspense fallback={<Spinner />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as movieAPI from 'services/movie-api';\nimport { normalizeSingleMovie } from 'helpers/normalizeMovies';\nimport NotFound from 'pages/NotFound/NotFound';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { IMovie } from 'interfaces/IMovie';\n\nexport default function MovieDetails() {\n  const { id } = useParams<{ id: string }>();\n  const [movie, setMovie] = useState<IMovie | null>(null);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        if (id) {\n          const response = await movieAPI.getMovieDetails(id);\n\n          const normalizedMovie = normalizeSingleMovie(response.data);\n\n          if (normalizedMovie) {\n            setMovie(normalizedMovie);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n        setError(true);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  return (\n    <main>{error ? <NotFound /> : movie && <MovieCard movie={movie} />}</main>\n  );\n}\n","import { Link } from 'react-router-dom';\n\nexport default function NotFound() {\n  return (\n    <>\n      <Link to=\"/\">Go back</Link>\n      <div>Not Found</div>\n    </>\n  );\n}\n","import { IMovie } from 'interfaces/IMovie';\nimport axios from 'axios';\nimport { IReview } from 'interfaces/IReviews';\nimport { ICast } from 'interfaces/ICast';\nexport let controller = new AbortController();\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MDllNDQ3NzZkODk4M2I4MjUxZGIyM2UwYTBkMDc2NCIsInN1YiI6IjY0OTk0ZWIxNmY0M2VjMDEzOTliMDJmMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zfMWjVI_xe7Qrg38kb3t2TBDdyF9nQKUMfvJwYSbESc';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  language: 'en-US',\n  sort_by: 'popularity.desc',\n  include_adult: false,\n};\n\ninterface Movies {\n  data: { results: IMovie[] };\n}\n\ninterface SingleMovie {\n  data: IMovie;\n}\n\ninterface SingleReview {\n  data: {\n    results: IReview[];\n  };\n}\n\ninterface SingleCast {\n  data: {\n    cast: ICast[];\n  };\n}\n\nfunction getTrendingMovies(): Promise<Movies> {\n  return axios.get('trending/movie/day', {\n    signal: controller.signal,\n  });\n}\n\nfunction searchMovies(query: string, page = 1): Promise<Movies> {\n  return axios.get(`search/movie?query=${query}&page=${page}`);\n}\n\nfunction getMovieDetails(movieId: string): Promise<SingleMovie> {\n  return axios.get(`movie/${movieId}`);\n}\n\nfunction getMovieCredits(movieId: string): Promise<SingleCast> {\n  return axios.get(`movie/${movieId}/credits`);\n}\n\nfunction getMovieReviews(movieId: string): Promise<SingleReview> {\n  return axios.get(`movie/${movieId}/reviews`);\n}\n\nexport {\n  getTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["ArrowIcon","styled","FiArrowLeft","ArrowBackWrapper","MovieContainer","AdditionalInfoLink","AdditionalInfoList","normalizeMovies","movies","map","id","poster_path","title","tagline","vote_average","overview","toFixed","normalizeSingleMovie","genres","el","name","MovieCard","movie","location","useLocation","backLinkRef","useRef","state","from","to","current","src","alt","genre","Suspense","fallback","Spinner","MovieDetails","useParams","useState","setMovie","error","setError","useEffect","fetchMovieDetails","movieAPI","response","normalizedMovie","data","console","log","NotFound","controller","AbortController","getTrendingMovies","axios","signal","searchMovies","query","page","getMovieDetails","movieId","getMovieCredits","getMovieReviews","language","sort_by","include_adult"],"sourceRoot":""}